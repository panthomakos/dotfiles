# Set the prefix key.
set -g prefix C-Space
unbind C-b

# Urgency Hooks and Bells
set -g bell-action any
set -g visual-bell on
set -g monitor-bell on

# Don't monitor for all activity - too verbose for programs like IRSSI.
setw -g monitor-activity off
# Only monitor for bells, which can be controlled.
set -g visual-activity on

# Use ZSH.
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# Responsive delay.
set -sg escape-time 0

# Disable repetition. This makes it easy to switch to a new window
# or pane and immediately start typing movement-bound keys (hjkl).
set -sg repeat-time 0

# Set base-index to 1 for panes and windows.
set -g base-index 1
setw -g pane-base-index 1

# Reload the source file.
bind r source-file ~/.tmux.conf \; display "Reloaded configuration."

# Splitting panes.
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'

# Pane movement keys.
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Still allow terminal to be cleared.
bind l send-keys 'C-l'

# Window movement keys.
bind c new-window

bind -nr C-p select-window -t :-
bind -nr C-n select-window -t :+

bind -r C-[ swap-window -t :-
bind -r C-] swap-window -t :+

# Resize panes.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Colors.
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"

# Status bar colors.
set -g status-fg white
set -g status-bg black

# Inactive window colors.
setw -g window-status-style fg=cyan,bg=default,dim

# Active window colors.
setw -g window-status-current-style fg=white,bg=default,bright

# Pane colors
set -g pane-border-style fg=default,bg=default
set -g pane-active-border-style fg=green,bg=default

# Command line.
set -g message-style fg=white,bg=black,bright

# Staus line.
set -g status-justify centre
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=cyan]%d %b %R"

# Copy mode.
setw -g mode-keys vi
unbind [
bind e copy-mode
bind -Tcopy-mode-vi 'v' send -X begin-selection

# Allow quick pane and window movement in copy mode.
bind -r -Tcopy-mode-vi M-h select-pane -L
bind -r -Tcopy-mode-vi M-j select-pane -D
bind -r -Tcopy-mode-vi M-k select-pane -U
bind -r -Tcopy-mode-vi M-l select-pane -R
bind -r -Tcopy-mode-vi M-p select-window -t :-
bind -r -Tcopy-mode-vi M-n select-window -t :+

# Clipboard
bind -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -selection clipboard > /dev/null"
bind p run "xclip -selection clipboard -o | tmux load-buffer - && tmux paste-buffer"

# Maximizing panes.
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Pipe
bind > pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"
