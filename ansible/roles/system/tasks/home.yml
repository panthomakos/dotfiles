---
- name: Initialize Git Submodules
  shell: git submodule update --init
  args:
    warn: no
  become: no

- name: Install ZSH
  pacman: name=zsh state=present

- name: Configure User
  user: name={{ user.name }} shell=/bin/zsh

- name: Configure User Groups
  user: name={{ user.name }} group={{ item }} append=yes
  with_items: "{{ user.groups }}"

- command: pandoc -v
  become: no
  register: pandoc_version
  ignore_errors: True

- name: Update Cabal
  shell: cabal update
  become: no

- name: Install Pandoc
  shell: cabal install pandoc
  become: no
  when: pandoc_version|failed

- name: Initialize RBENV
  shell: eval "$(rbenv init -)"
  become: no
  environment:
    PATH: "{{ home }}/.rbenv/bin:{{ lookup('env', 'PATH') }}"

- name: Update ruby-build
  shell: ./install.sh chdir={{ home }}/ruby-build

- command: rbenv versions
  become: no
  register: ruby_installed
  ignore_errors: True

- name: Install Ruby
  shell: rbenv install {{ ruby }}
  become: no
  when: ruby_installed.stdout.find('{{ruby}}') == -1

- command: rbenv version
  become: no
  register: ruby_active
  ignore_errors: True

- name: Set Default Ruby
  shell: rbenv global {{ ruby }}
  become: no
  when: ruby_active.stdout.find('{{ruby}}') == -1

- name: Install Seeing Is Believing Gem
  shell: gem install seeing_is_believing
  become: no

- command: go version
  become: no
  register: go_version
  ignore_errors: yes

- name: Download Go
  command: wget https://storage.googleapis.com/golang/go{{go}}.linux-amd64.tar.gz
  args:
    chdir: /tmp
  when: go_version|failed or go_version.stdout.find('{{go}}') == -1

- name: Install Go
  command: tar -C /usr/local -xzf go{{go}}.linux-amd64.tar.gz
  args:
    chdir: /tmp
  when: go_version|failed or go_version.stdout.find('{{go}}') == -1

- name: Configure Chrome Alias
  copy: src=chrome dest=/usr/bin/chrome mode=0755
